{"version":3,"file":"static/js/378.b34c625e.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/BarChart.js","../node_modules/@mui/icons-material/esm/Timeline.js","../node_modules/@mui/icons-material/esm/MicOff.js","../node_modules/@mui/icons-material/esm/Refresh.js","components/LiveBPMDetector.js","../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 9h4v11H4zm12 4h4v7h-4zm-6-9h4v16h-4z\"\n}), 'BarChart');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2\"\n}), 'Timeline');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28m-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18zM4.27 3 3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73z\"\n}), 'MicOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'Refresh');","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  IconButton,\n  LinearProgress,\n  Stack,\n  Chip,\n  Paper,\n  Switch,\n  FormControlLabel,\n  Alert,\n  Tooltip,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Mic,\n  MicOff,\n  PlayArrow,\n  Refresh,\n  Timeline,\n  BarChart,\n} from '@mui/icons-material';\nimport useMetronomeStore from '../stores/metronomeStore';\n\nconst LiveBPMDetector = React.memo(() => {\n  const theme = useTheme();\n  const { setBpm } = useMetronomeStore();\n  \n  // Audio processing refs\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const mediaStreamRef = useRef(null);\n  const audioDataRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const processingIntervalRef = useRef(null); // Add interval ref for better control\n  \n  // Beat detection state\n  const lastBeatTimeRef = useRef(0);\n  const beatIntervalsRef = useRef([]);\n  const energyHistoryRef = useRef([]);\n  const spectralFluxHistoryRef = useRef([]);\n  const previousMagnitudesRef = useRef(null);\n  const bpmHistoryRef = useRef([]);\n  const adaptiveThresholdRef = useRef(0.01);\n  \n  // State\n  const [isListening, setIsListening] = useState(false);\n  const [detectedBPM, setDetectedBPM] = useState(null);\n  const [confidence, setConfidence] = useState(0);\n  const [audioLevel, setAudioLevel] = useState(0);\n  const [autoSync, setAutoSync] = useState(false);\n  const [error, setError] = useState(null);\n  const [recentBeats, setRecentBeats] = useState([]);\n  const [debugInfo, setDebugInfo] = useState('');\n  const [bpmHistory, setBpmHistory] = useState([]);\n  const [showGraph, setShowGraph] = useState(true);\n\n  // Throttle audio processing to reduce CPU usage\n  const PROCESSING_INTERVAL = 50; // Faster processing for better accuracy\n  const BPM_HISTORY_UPDATE_INTERVAL = 1000; // Update graph every second\n  const MAX_GRAPH_POINTS = 60; // Show last 60 seconds\n  \n  // Update BPM history for graph every second\n  useEffect(() => {\n    if (!isListening) return;\n    \n    const interval = setInterval(() => {\n      const now = Date.now();\n      if (detectedBPM && confidence > 0.3) {\n        setBpmHistory(prev => {\n          const newEntry = {\n            timestamp: now,\n            bpm: detectedBPM,\n            confidence: confidence\n          };\n          const updated = [...prev, newEntry];\n          \n          // Keep only last 60 seconds\n          const cutoffTime = now - (MAX_GRAPH_POINTS * 1000);\n          return updated.filter(entry => entry.timestamp > cutoffTime);\n        });\n      }\n    }, BPM_HISTORY_UPDATE_INTERVAL);\n    \n    return () => clearInterval(interval);\n  }, [isListening, detectedBPM, confidence]);\n  \n  // Enhanced beat detection with spectral flux and frequency analysis\n  const detectBeats = useCallback((audioData, frequencyData, currentTime) => {\n    if (!audioData || audioData.length === 0 || !frequencyData) return [];\n    \n    const minTimeBetweenBeats = 150; // ms - minimum time between beats\n    \n    // 1. Calculate RMS energy for current frame\n    const rmsEnergy = Math.sqrt(audioData.reduce((sum, sample) => sum + sample * sample, 0) / audioData.length);\n    \n    // 2. Calculate peak amplitude\n    const peakAmplitude = Math.max(...audioData.map(Math.abs));\n    \n    // 3. Focus on percussive frequency bands (typically 60Hz - 5kHz for drums)\n    const percussiveStart = Math.floor(60 * frequencyData.length / 22050); // 60Hz\n    const percussiveEnd = Math.floor(5000 * frequencyData.length / 22050); // 5kHz\n    const percussiveBands = frequencyData.slice(percussiveStart, percussiveEnd);\n    \n    // 4. Calculate spectral energy in percussive range\n    const spectralEnergy = percussiveBands.reduce((sum, magnitude) => sum + magnitude, 0) / percussiveBands.length;\n    \n    // 5. Calculate spectral flux (measure of spectral change)\n    let spectralFlux = 0;\n    if (previousMagnitudesRef.current) {\n      const prevPercussive = previousMagnitudesRef.current.slice(percussiveStart, percussiveEnd);\n      spectralFlux = percussiveBands.reduce((sum, current, i) => {\n        const diff = current - (prevPercussive[i] || 0);\n        return sum + Math.max(0, diff); // Only positive changes\n      }, 0) / percussiveBands.length;\n    }\n    previousMagnitudesRef.current = [...frequencyData];\n    \n    // 6. Combine different energy measures with weights\n    const timeEnergy = (rmsEnergy * 0.3) + (peakAmplitude * 0.2);\n    const freqEnergy = spectralEnergy * 0.3;\n    const fluxEnergy = spectralFlux * 0.2;\n    const combinedEnergy = timeEnergy + freqEnergy + fluxEnergy;\n    \n    // Add to energy and flux history\n    energyHistoryRef.current.push(combinedEnergy);\n    spectralFluxHistoryRef.current.push(spectralFlux);\n    \n    if (energyHistoryRef.current.length > 50) {\n      energyHistoryRef.current.shift();\n      spectralFluxHistoryRef.current.shift();\n    }\n    \n    // Only proceed if we have enough history\n    if (energyHistoryRef.current.length < 15) {\n      setDebugInfo(`Building analysis history: ${energyHistoryRef.current.length}/15`);\n      return [];\n    }\n    \n    // 7. Adaptive threshold calculation\n    const recentEnergy = energyHistoryRef.current.slice(-20);\n    const avgEnergy = recentEnergy.reduce((sum, e) => sum + e, 0) / recentEnergy.length;\n    const energyVariance = recentEnergy.reduce((sum, e) => sum + Math.pow(e - avgEnergy, 2), 0) / recentEnergy.length;\n    const energyStdDev = Math.sqrt(energyVariance);\n    \n    // Update adaptive threshold based on signal characteristics\n    const baseThreshold = avgEnergy + (energyStdDev * 1.5);\n    adaptiveThresholdRef.current = adaptiveThresholdRef.current * 0.9 + baseThreshold * 0.1; // Smooth adaptation\n    \n    // 8. Multi-criteria beat detection\n    const energyThreshold = combinedEnergy > adaptiveThresholdRef.current;\n    const fluxThreshold = spectralFlux > (spectralFluxHistoryRef.current.slice(-10).reduce((sum, f) => sum + f, 0) / 10) * 1.8;\n    const peakCondition = peakAmplitude > avgEnergy * 2;\n    \n    setDebugInfo(`Energy: ${combinedEnergy.toFixed(4)}, Flux: ${spectralFlux.toFixed(4)}, Threshold: ${adaptiveThresholdRef.current.toFixed(4)}, Peak: ${peakAmplitude.toFixed(4)}`);\n    \n    // Beat detection: multiple criteria must be met\n    const beats = [];\n    const isBeat = energyThreshold && (fluxThreshold || peakCondition);\n    \n    if (isBeat) {\n      const now = currentTime;\n      \n      // Avoid duplicate beats with improved timing\n      if (now - lastBeatTimeRef.current > minTimeBetweenBeats) {\n        beats.push(now);\n        lastBeatTimeRef.current = now;\n        \n        setDebugInfo(`🥁 BEAT! Energy: ${combinedEnergy.toFixed(4)}, Flux: ${spectralFlux.toFixed(4)}, Peak: ${peakAmplitude.toFixed(4)}`);\n      } else {\n        setDebugInfo(`Beat filtered: ${now - lastBeatTimeRef.current}ms since last`);\n      }\n    }\n    \n    return beats;\n  }, []);\n  \n  // Enhanced BPM calculation with tempo smoothing\n  const calculateBPM = useCallback((beatTimes) => {\n    if (beatTimes.length === 0) return null;\n    \n    // Add new beats to intervals\n    beatTimes.forEach(beatTime => {\n      beatIntervalsRef.current.push(beatTime);\n    });\n    \n    // Keep only recent beats (last 12 for better accuracy)\n    if (beatIntervalsRef.current.length > 12) {\n      beatIntervalsRef.current = beatIntervalsRef.current.slice(-12);\n    }\n    \n    // Need at least 4 beats for reliable BPM calculation\n    if (beatIntervalsRef.current.length < 4) {\n      setDebugInfo(prev => prev + ` | Need more beats: ${beatIntervalsRef.current.length}/4`);\n      return null;\n    }\n    \n    // Calculate intervals between consecutive beats\n    const intervals = [];\n    for (let i = 1; i < beatIntervalsRef.current.length; i++) {\n      intervals.push(beatIntervalsRef.current[i] - beatIntervalsRef.current[i - 1]);\n    }\n    \n    // Enhanced outlier filtering\n    const medianInterval = [...intervals].sort((a, b) => a - b)[Math.floor(intervals.length / 2)];\n    const allowedDeviation = medianInterval * 0.3; // 30% deviation allowed\n    \n    const filteredIntervals = intervals.filter(interval => {\n      const deviationFromMedian = Math.abs(interval - medianInterval);\n      return interval > 300 && interval < 1000 && deviationFromMedian < allowedDeviation;\n    });\n    \n    if (filteredIntervals.length < 3) {\n      setDebugInfo(prev => prev + ` | Not enough consistent intervals: ${filteredIntervals.length}/3`);\n      return null;\n    }\n    \n    // Calculate weighted average (recent intervals have more weight)\n    let weightedSum = 0;\n    let totalWeight = 0;\n    filteredIntervals.forEach((interval, index) => {\n      const weight = Math.pow(1.2, index); // Exponential weighting favoring recent beats\n      weightedSum += interval * weight;\n      totalWeight += weight;\n    });\n    const weightedAvgInterval = weightedSum / totalWeight;\n    \n    // Convert to BPM\n    const currentBpm = 60000 / weightedAvgInterval;\n    \n    // Tempo smoothing - add to BPM history\n    bpmHistoryRef.current.push(currentBpm);\n    if (bpmHistoryRef.current.length > 8) {\n      bpmHistoryRef.current.shift();\n    }\n    \n    // Calculate smoothed BPM\n    const recentBpms = bpmHistoryRef.current.slice(-5);\n    const smoothedBpm = recentBpms.reduce((sum, bpm) => sum + bpm, 0) / recentBpms.length;\n    \n    // Calculate confidence based on consistency of both intervals and BPMs\n    const intervalVariance = filteredIntervals.reduce((sum, interval) => {\n      return sum + Math.pow(interval - weightedAvgInterval, 2);\n    }, 0) / filteredIntervals.length;\n    \n    const bpmVariance = recentBpms.reduce((sum, bpm) => {\n      return sum + Math.pow(bpm - smoothedBpm, 2);\n    }, 0) / recentBpms.length;\n    \n    const intervalStdDev = Math.sqrt(intervalVariance);\n    const bpmStdDev = Math.sqrt(bpmVariance);\n    \n    // Combined confidence score\n    const intervalConfidence = Math.max(0, 1 - (intervalStdDev / (weightedAvgInterval * 0.8)));\n    const bpmConfidence = Math.max(0, 1 - (bpmStdDev / (smoothedBpm * 0.15)));\n    const confidence = (intervalConfidence * 0.6) + (bpmConfidence * 0.4);\n    \n    setDebugInfo(`BPM: ${smoothedBpm.toFixed(1)} (raw: ${currentBpm.toFixed(1)}), Confidence: ${(confidence * 100).toFixed(1)}%, Intervals: ${filteredIntervals.length}, StdDev: ${intervalStdDev.toFixed(0)}ms`);\n    \n    return { bpm: Math.round(smoothedBpm), confidence };\n  }, []);\n  \n  // Audio processing loop\n  const processAudio = useCallback(() => {\n    if (!analyserRef.current || !audioDataRef.current || !isListening) return;\n    \n    const analyser = analyserRef.current;\n    const timeDataArray = audioDataRef.current;\n    \n    // Get time domain data for energy analysis\n    analyser.getFloatTimeDomainData(timeDataArray);\n    \n    // Get frequency domain data for spectral analysis\n    const freqDataArray = new Float32Array(analyser.frequencyBinCount);\n    analyser.getFloatFrequencyData(freqDataArray);\n    \n    // Convert dB to linear scale for frequency data\n    const linearFreqData = freqDataArray.map(db => Math.pow(10, db / 20));\n    \n    // Calculate audio level for visualization\n    const rms = Math.sqrt(timeDataArray.reduce((sum, sample) => sum + sample * sample, 0) / timeDataArray.length);\n    const peak = Math.max(...timeDataArray.map(Math.abs));\n    const audioLevelValue = Math.max(rms * 80, peak * 40); // More sensitive scaling\n    setAudioLevel(Math.min(1, audioLevelValue));\n    \n    // Detect beats using both time and frequency domain analysis\n    const currentTime = Date.now();\n    const beats = detectBeats(timeDataArray, linearFreqData, currentTime);\n    \n    if (beats.length > 0) {\n      setRecentBeats(prev => {\n        const newBeats = [...prev.slice(-10), ...beats].slice(-10);\n        return newBeats;\n      });\n      \n      // Calculate BPM immediately when we get beats\n      const bpmResult = calculateBPM(beats);\n      if (bpmResult && bpmResult.bpm >= 60 && bpmResult.bpm <= 200) {\n        setDetectedBPM(bpmResult.bpm);\n        setConfidence(bpmResult.confidence);\n        \n        // Auto-sync if enabled and confidence is high enough\n        if (autoSync && bpmResult.confidence > 0.6) { // Higher confidence threshold for auto-sync\n          setBpm(bpmResult.bpm);\n        }\n      }\n    }\n  }, [detectBeats, calculateBPM, autoSync, setBpm, isListening]);\n  \n  // Start audio processing interval\n  useEffect(() => {\n    if (isListening && !processingIntervalRef.current) {\n      processingIntervalRef.current = setInterval(processAudio, PROCESSING_INTERVAL);\n    } else if (!isListening && processingIntervalRef.current) {\n      clearInterval(processingIntervalRef.current);\n      processingIntervalRef.current = null;\n    }\n    \n    return () => {\n      if (processingIntervalRef.current) {\n        clearInterval(processingIntervalRef.current);\n        processingIntervalRef.current = null;\n      }\n    };\n  }, [isListening, processAudio]);\n  \n  // Start listening\n  const startListening = async () => {\n    try {\n      setError(null);\n      setDebugInfo('Requesting microphone access...');\n      \n      // Check if getUserMedia is supported\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error('getUserMedia is not supported in this browser');\n      }\n      \n      // Request microphone access\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: false,\n          noiseSuppression: false,\n          autoGainControl: false,\n          sampleRate: 44100,\n          channelCount: 1 // Mono audio for simpler processing\n        }\n      });\n      \n      setDebugInfo('Microphone access granted, initializing audio...');\n      mediaStreamRef.current = stream;\n      \n      // Create audio context\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)({\n        sampleRate: 44100\n      });\n      audioContextRef.current = audioContext;\n      \n      // Resume if suspended (required for some browsers)\n      if (audioContext.state === 'suspended') {\n        await audioContext.resume();\n        setDebugInfo('Audio context resumed');\n      }\n      \n      // Create analyser with optimized settings for beat detection\n      const analyser = audioContext.createAnalyser();\n      analyser.fftSize = 2048; // Larger FFT for better frequency resolution\n      analyser.smoothingTimeConstant = 0.1; // Minimal smoothing for responsive detection\n      analyser.minDecibels = -90;\n      analyser.maxDecibels = -10;\n      analyserRef.current = analyser;\n      \n      // Create audio data arrays for both time and frequency domain\n      audioDataRef.current = new Float32Array(analyser.fftSize);\n      \n      // Connect audio source\n      const source = audioContext.createMediaStreamSource(stream);\n      source.connect(analyser);\n      \n      setDebugInfo(`Audio initialized. Sample rate: ${audioContext.sampleRate}Hz, FFT size: ${analyser.fftSize}`);\n      \n      setIsListening(true);\n      setDebugInfo('Audio processing started. Start playing!');\n      \n      // Reset beat detection state\n      lastBeatTimeRef.current = 0;\n      beatIntervalsRef.current = [];\n      energyHistoryRef.current = [];\n      spectralFluxHistoryRef.current = [];\n      previousMagnitudesRef.current = null;\n      bpmHistoryRef.current = [];\n      adaptiveThresholdRef.current = 0.01;\n      \n    } catch (err) {\n      console.error('Error starting audio:', err);\n      let errorMessage = 'Could not access microphone. ';\n      \n      if (err.name === 'NotAllowedError') {\n        errorMessage += 'Please allow microphone access and try again.';\n      } else if (err.name === 'NotFoundError') {\n        errorMessage += 'No microphone found. Please connect a microphone.';\n      } else if (err.name === 'NotSupportedError') {\n        errorMessage += 'Your browser does not support audio input.';\n      } else {\n        errorMessage += err.message;\n      }\n      \n      setError(errorMessage);\n      setDebugInfo(`Error: ${err.message}`);\n    }\n  };\n  \n  // Stop listening\n  const stopListening = () => {\n    // Clean up interval\n    if (processingIntervalRef.current) {\n      clearInterval(processingIntervalRef.current);\n      processingIntervalRef.current = null;\n    }\n    \n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n    \n    if (mediaStreamRef.current) {\n      mediaStreamRef.current.getTracks().forEach(track => track.stop());\n      mediaStreamRef.current = null;\n    }\n    \n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    \n    analyserRef.current = null;\n    audioDataRef.current = null;\n    \n    // Reset state\n    setIsListening(false);\n    setAudioLevel(0);\n    setDetectedBPM(null);\n    setConfidence(0);\n    setRecentBeats([]);\n    setBpmHistory([]);\n    setDebugInfo('Stopped listening');\n    \n    // Reset detection state\n    lastBeatTimeRef.current = 0;\n    beatIntervalsRef.current = [];\n    energyHistoryRef.current = [];\n    spectralFluxHistoryRef.current = [];\n    previousMagnitudesRef.current = null;\n    bpmHistoryRef.current = [];\n    adaptiveThresholdRef.current = 0.01;\n  };\n  \n  // Reset detection\n  const resetDetection = () => {\n    setDetectedBPM(null);\n    setConfidence(0);\n    setRecentBeats([]);\n    setBpmHistory([]);\n    setDebugInfo('Detection reset');\n    \n    // Reset detection state\n    lastBeatTimeRef.current = 0;\n    beatIntervalsRef.current = [];\n    energyHistoryRef.current = [];\n    spectralFluxHistoryRef.current = [];\n    previousMagnitudesRef.current = null;\n    bpmHistoryRef.current = [];\n    adaptiveThresholdRef.current = 0.01;\n  };\n  \n  // Sync BPM to metronome\n  const syncBPM = () => {\n    if (detectedBPM) {\n      setBpm(detectedBPM);\n      setDebugInfo(`Synced BPM ${detectedBPM} to metronome`);\n    }\n  };\n  \n  // Test beat detection by simulating a beat\n  const testBeat = () => {\n    const now = Date.now();\n    const beats = [now];\n    \n    // Add test beat to recent beats\n    setRecentBeats(prev => [...prev.slice(-10), ...beats].slice(-10));\n    \n    // Add to beat intervals for BPM calculation\n    beatIntervalsRef.current.push(now);\n    if (beatIntervalsRef.current.length > 8) {\n      beatIntervalsRef.current = beatIntervalsRef.current.slice(-8);\n    }\n    \n    const bpmResult = calculateBPM(beats);\n    if (bpmResult) {\n      setDetectedBPM(bpmResult.bpm);\n      setConfidence(bpmResult.confidence);\n    }\n    \n    setDebugInfo(`🧪 Test beat added at ${now} (Total beats: ${beatIntervalsRef.current.length})`);\n  };\n  \n  // BPM Stream Graph Component\n  const BPMStreamGraph = React.memo(() => {\n    if (bpmHistory.length < 2) {\n      return (\n        <Paper elevation={1} sx={{ p: 3, backgroundColor: theme.palette.background.default, mb: 3 }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', mb: 2 }}>\n            <Typography variant=\"h6\" color=\"primary\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <BarChart />\n              BPM Stream Monitor\n            </Typography>\n          </Box>\n          <Box sx={{ \n            height: 300, \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'center',\n            border: `2px dashed ${theme.palette.divider}`,\n            borderRadius: 2,\n            backgroundColor: theme.palette.action.hover\n          }}>\n            <Typography variant=\"body1\" color=\"text.secondary\" textAlign=\"center\">\n              {isListening ? \n                \"🎵 Start playing beats to see the BPM stream graph...\" : \n                \"📊 Click 'Start Listening' to begin BPM monitoring\"\n              }\n            </Typography>\n          </Box>\n        </Paper>\n      );\n    }\n    \n    const graphWidth = 900; // Much bigger width\n    const graphHeight = 300; // Taller height  \n    const padding = 50; // More padding for better labels\n    const innerWidth = graphWidth - padding * 2;\n    const innerHeight = graphHeight - padding * 2;\n    \n    // Find BPM range for scaling\n    const bpmValues = bpmHistory.map(entry => entry.bpm);\n    const minBpm = Math.max(60, Math.min(...bpmValues) - 15);\n    const maxBpm = Math.min(200, Math.max(...bpmValues) + 15);\n    const bpmRange = maxBpm - minBpm;\n    \n    // Create time range (last 60 seconds)\n    const now = Date.now();\n    const timeRange = 60 * 1000; // 60 seconds\n    const earliestTime = now - timeRange;\n    \n    // Scale functions\n    const scaleX = (timestamp) => ((timestamp - earliestTime) / timeRange) * innerWidth;\n    const scaleY = (bpm) => innerHeight - ((bpm - minBpm) / bpmRange) * innerHeight;\n    \n    // Generate path for BPM line\n    const pathData = bpmHistory\n      .filter(entry => entry.timestamp >= earliestTime)\n      .map((entry, index) => {\n        const x = scaleX(entry.timestamp);\n        const y = scaleY(entry.bpm);\n        return `${index === 0 ? 'M' : 'L'} ${x + padding} ${y + padding}`;\n      })\n      .join(' ');\n    \n    // Generate confidence area (optional background)\n    const confidencePathData = bpmHistory\n      .filter(entry => entry.timestamp >= earliestTime)\n      .map((entry, index) => {\n        const x = scaleX(entry.timestamp);\n        const baseY = scaleY(minBpm);\n        const confY = scaleY(minBpm + (entry.confidence * bpmRange * 0.3)); // Scale confidence to 30% of range\n        if (index === 0) {\n          return `M ${x + padding} ${baseY + padding} L ${x + padding} ${confY + padding}`;\n        }\n        return `L ${x + padding} ${confY + padding}`;\n      })\n      .join(' ');\n    \n    // Close the confidence area\n    const lastEntry = bpmHistory[bpmHistory.length - 1];\n    const lastX = scaleX(lastEntry.timestamp);\n    const closedConfidenceArea = confidencePathData + \n      ` L ${lastX + padding} ${scaleY(minBpm) + padding} Z`;\n    \n    return (\n      <Paper elevation={2} sx={{ p: 3, backgroundColor: theme.palette.background.default, mb: 3 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>\n          <Typography variant=\"h6\" color=\"primary\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <BarChart />\n            Live BPM Stream Monitor\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {bpmHistory.length} data points\n            </Typography>\n            <Chip \n              label={`${detectedBPM || '--'} BPM`} \n              color=\"primary\" \n              variant=\"filled\"\n              size=\"medium\"\n              sx={{ fontWeight: 'bold' }}\n            />\n          </Box>\n        </Box>\n        \n        <Box sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\n          <svg \n            width={graphWidth} \n            height={graphHeight}\n            style={{ \n              border: `2px solid ${theme.palette.divider}`,\n              borderRadius: '8px',\n              backgroundColor: theme.palette.background.paper,\n              boxShadow: theme.shadows[1]\n            }}\n          >\n            {/* Grid lines */}\n            <defs>\n              <pattern id=\"grid\" width=\"50\" height=\"25\" patternUnits=\"userSpaceOnUse\">\n                <path \n                  d=\"M 50 0 L 0 0 0 25\" \n                  fill=\"none\" \n                  stroke={theme.palette.divider} \n                  strokeWidth=\"0.5\"\n                  opacity=\"0.4\"\n                />\n              </pattern>\n            </defs>\n            <rect width={innerWidth} height={innerHeight} x={padding} y={padding} fill=\"url(#grid)\" />\n            \n            {/* Confidence area background */}\n            {confidencePathData && (\n              <path\n                d={closedConfidenceArea}\n                fill={theme.palette.primary.main}\n                fillOpacity=\"0.15\"\n                stroke=\"none\"\n              />\n            )}\n            \n            {/* BPM line */}\n            <path\n              d={pathData}\n              fill=\"none\"\n              stroke={theme.palette.primary.main}\n              strokeWidth=\"3\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            \n            {/* Data points */}\n            {bpmHistory\n              .filter(entry => entry.timestamp >= earliestTime)\n              .map((entry, index) => (\n                <circle\n                  key={entry.timestamp}\n                  cx={scaleX(entry.timestamp) + padding}\n                  cy={scaleY(entry.bpm) + padding}\n                  r=\"3\"\n                  fill={entry.confidence > 0.8 ? theme.palette.success.main : \n                        entry.confidence > 0.6 ? theme.palette.warning.main : \n                        theme.palette.error.main}\n                  stroke={theme.palette.background.paper}\n                  strokeWidth=\"2\"\n                />\n              ))}\n            \n            {/* Y-axis labels */}\n            <text \n              x={padding - 15} \n              y={padding + 5} \n              textAnchor=\"end\" \n              fontSize=\"14\" \n              fill={theme.palette.text.secondary}\n              fontWeight=\"bold\"\n            >\n              {maxBpm}\n            </text>\n            <text \n              x={padding - 15} \n              y={innerHeight + padding - 5} \n              textAnchor=\"end\" \n              fontSize=\"14\" \n              fill={theme.palette.text.secondary}\n              fontWeight=\"bold\"\n            >\n              {minBpm}\n            </text>\n            \n            {/* Middle Y-axis label */}\n            <text \n              x={padding - 15} \n              y={innerHeight / 2 + padding + 5} \n              textAnchor=\"end\" \n              fontSize=\"13\" \n              fill={theme.palette.text.secondary}\n            >\n              {Math.round((minBpm + maxBpm) / 2)}\n            </text>\n            \n            {/* Current BPM indicator line */}\n            {detectedBPM && (\n              <>\n                <line\n                  x1={padding}\n                  y1={scaleY(detectedBPM) + padding}\n                  x2={innerWidth + padding}\n                  y2={scaleY(detectedBPM) + padding}\n                  stroke={theme.palette.secondary.main}\n                  strokeWidth=\"2\"\n                  strokeDasharray=\"5,5\"\n                  opacity=\"0.8\"\n                />\n                <text \n                  x={innerWidth + padding + 10} \n                  y={scaleY(detectedBPM) + padding + 4} \n                  fontSize=\"12\" \n                  fill={theme.palette.secondary.main}\n                  fontWeight=\"bold\"\n                >\n                  {detectedBPM} BPM\n                </text>\n              </>\n            )}\n            \n            {/* X-axis time labels */}\n            <text \n              x={padding} \n              y={graphHeight - 15} \n              fontSize=\"13\" \n              fill={theme.palette.text.secondary}\n              fontWeight=\"bold\"\n            >\n              -60s\n            </text>\n            <text \n              x={innerWidth / 2 + padding} \n              y={graphHeight - 15} \n              textAnchor=\"middle\"\n              fontSize=\"12\" \n              fill={theme.palette.text.secondary}\n            >\n              -30s\n            </text>\n            <text \n              x={innerWidth + padding} \n              y={graphHeight - 15} \n              textAnchor=\"end\" \n              fontSize=\"13\" \n              fill={theme.palette.text.secondary}\n              fontWeight=\"bold\"\n            >\n              now\n            </text>\n            \n            {/* Y-axis label */}\n            <text \n              x={20} \n              y={innerHeight / 2 + padding} \n              textAnchor=\"middle\"\n              fontSize=\"14\" \n              fill={theme.palette.text.secondary}\n              fontWeight=\"bold\"\n              transform={`rotate(-90, 20, ${innerHeight / 2 + padding})`}\n            >\n              BPM\n            </text>\n          </svg>\n        </Box>\n        \n        {/* Graph legend and stats combined */}\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n          {/* Legend */}\n          <Box sx={{ display: 'flex', gap: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n              <Box sx={{ width: 16, height: 3, backgroundColor: theme.palette.primary.main, borderRadius: 1 }} />\n              <Typography variant=\"caption\">BPM Line</Typography>\n            </Box>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n              <Box sx={{ width: 10, height: 10, borderRadius: '50%', backgroundColor: theme.palette.success.main }} />\n              <Typography variant=\"caption\">High Confidence</Typography>\n            </Box>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n              <Box sx={{ width: 10, height: 10, borderRadius: '50%', backgroundColor: theme.palette.warning.main }} />\n              <Typography variant=\"caption\">Medium</Typography>\n            </Box>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n              <Box sx={{ width: 10, height: 10, borderRadius: '50%', backgroundColor: theme.palette.error.main }} />\n              <Typography variant=\"caption\">Low</Typography>\n            </Box>\n          </Box>\n          \n          {/* Quick stats */}\n          <Box sx={{ display: 'flex', gap: 2 }}>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              <strong>Avg:</strong> {bpmHistory.length > 0 ? \n                Math.round(bpmHistory.reduce((sum, entry) => sum + entry.bpm, 0) / bpmHistory.length) : '--'} BPM\n            </Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              <strong>Range:</strong> {bpmHistory.length > 0 ? \n                `${Math.min(...bpmValues)}-${Math.max(...bpmValues)}` : '--'}\n            </Typography>\n          </Box>\n        </Box>\n        \n        {/* Detailed stats bar */}\n        <Box sx={{ p: 1.5, backgroundColor: theme.palette.action.hover, borderRadius: 1 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"center\">\n            <strong>Current BPM:</strong> {detectedBPM || '--'} | \n            <strong> Confidence:</strong> {Math.round(confidence * 100)}% |\n            <strong> 60s Average:</strong> {bpmHistory.length > 0 ? \n              Math.round(bpmHistory.reduce((sum, entry) => sum + entry.bpm, 0) / bpmHistory.length) : '--'} BPM |\n            <strong> Stability:</strong> {bpmHistoryRef.current.length}/5 beats |\n            <strong> Data Points:</strong> {bpmHistory.length}/60\n          </Typography>\n        </Box>\n      </Paper>\n    );\n  });\n  \n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      stopListening();\n    };\n  }, []);\n  \n  return (\n    <Box sx={{ width: '100%' }}>\n      {/* BPM Stream Graph - MAIN VIEW AT TOP */}\n      {showGraph && <BPMStreamGraph />}\n      \n      <Card elevation={3} sx={{ mt: 2 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Timeline />\n            Live BPM Detector\n          </Typography>\n          \n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n          \n          {/* Compact BPM Display */}\n          <Box sx={{ textAlign: 'center', mb: 2 }}>\n            <Typography variant=\"h3\" sx={{ fontWeight: 'bold', color: theme.palette.primary.main }}>\n              {detectedBPM || '--'}\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              Current BPM\n            </Typography>\n            \n            {confidence > 0 && (\n              <Box sx={{ mt: 1, maxWidth: 400, mx: 'auto' }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Confidence: {Math.round(confidence * 100)}%\n                  {bpmHistoryRef.current.length > 0 && ` | Stability: ${bpmHistoryRef.current.length}/5`}\n                </Typography>\n                <LinearProgress \n                  variant=\"determinate\" \n                  value={confidence * 100} \n                  sx={{ \n                    mt: 0.5, \n                    height: 6, \n                    borderRadius: 3,\n                    '& .MuiLinearProgress-bar': {\n                      backgroundColor: confidence > 0.8 ? theme.palette.success.main :\n                                     confidence > 0.6 ? theme.palette.warning.main :\n                                     theme.palette.error.main\n                    }\n                  }}\n                />\n              </Box>\n            )}\n          </Box>\n        \n        {/* Audio Level and Spectral Activity Indicators */}\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"caption\" color=\"text.secondary\" gutterBottom>\n            Audio Input Level\n          </Typography>\n          <LinearProgress \n            variant=\"determinate\" \n            value={audioLevel * 100} \n            sx={{ \n              height: 8, \n              borderRadius: 4,\n              backgroundColor: theme.palette.grey[300],\n              '& .MuiLinearProgress-bar': {\n                backgroundColor: audioLevel > 0.8 ? theme.palette.error.main : \n                               audioLevel > 0.5 ? theme.palette.warning.main : \n                               theme.palette.success.main\n              }\n            }}\n          />\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontSize: '0.7rem', opacity: 0.8 }}>\n            {audioLevel > 0.1 ? '🎵 Audio detected' : '🔇 No audio - try playing louder'}\n          </Typography>\n        </Box>\n        \n        {/* Controls */}\n        <Stack direction=\"row\" spacing={2} justifyContent=\"center\" sx={{ mb: 2 }} flexWrap=\"wrap\">\n          <Button\n            variant={isListening ? \"outlined\" : \"contained\"}\n            color={isListening ? \"error\" : \"primary\"}\n            startIcon={isListening ? <MicOff /> : <Mic />}\n            onClick={isListening ? stopListening : startListening}\n            size=\"large\"\n          >\n            {isListening ? 'Stop' : 'Start'} Listening\n          </Button>\n          \n          <Tooltip title=\"Reset Detection\">\n            <IconButton onClick={resetDetection} color=\"primary\">\n              <Refresh />\n            </IconButton>\n          </Tooltip>\n          \n          {isListening && (\n            <Button\n              variant=\"outlined\"\n              onClick={testBeat}\n              size=\"small\"\n              color=\"secondary\"\n            >\n              Test Beat\n            </Button>\n          )}\n          \n          {detectedBPM && (\n            <Button\n              variant=\"outlined\"\n              startIcon={<PlayArrow />}\n              onClick={syncBPM}\n              disabled={!detectedBPM}\n            >\n              Sync to Metronome\n            </Button>\n          )}\n        </Stack>\n        \n        {/* Settings */}\n        <Box sx={{ mb: 2 }}>\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={autoSync}\n                  onChange={(e) => setAutoSync(e.target.checked)}\n                  color=\"primary\"\n                />\n              }\n              label=\"Auto-sync to metronome\"\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showGraph}\n                  onChange={(e) => setShowGraph(e.target.checked)}\n                  color=\"primary\"\n                />\n              }\n              label=\"Show BPM graph\"\n            />\n          </Stack>\n        </Box>\n        \n        {/* Debug Info */}\n        {debugInfo && (\n          <Alert severity=\"info\" sx={{ mb: 2 }}>\n            <Typography variant=\"caption\">\n              Debug: {debugInfo}\n            </Typography>\n          </Alert>\n        )}\n        \n        {/* Beat Visualization */}\n        {recentBeats.length > 0 && (\n          <Paper elevation={1} sx={{ p: 2, backgroundColor: theme.palette.background.default, mb: 2 }}>\n            <Typography variant=\"subtitle2\" color=\"primary\" gutterBottom>\n              🥁 Beats Detected: {recentBeats.length}\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n              {recentBeats.slice(-10).map((beat, index) => (\n                <Chip\n                  key={beat}\n                  label={`${index + 1}`}\n                  size=\"small\"\n                  color={index === recentBeats.length - 1 ? \"primary\" : \"default\"}\n                  sx={{ \n                    animation: index === recentBeats.length - 1 ? 'pulse 0.8s ease-in-out' : 'none',\n                    '@keyframes pulse': {\n                      '0%': { transform: 'scale(1)', backgroundColor: theme.palette.primary.main },\n                      '50%': { transform: 'scale(1.3)', backgroundColor: theme.palette.secondary.main },\n                      '100%': { transform: 'scale(1)', backgroundColor: theme.palette.primary.main }\n                    }\n                  }}\n                />\n              ))}\n            </Box>\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\n              Latest beat: {recentBeats.length > 0 ? new Date(recentBeats[recentBeats.length - 1]).toLocaleTimeString() : 'None'}\n            </Typography>\n          </Paper>\n        )}\n        \n        {/* Instructions */}\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          <Typography variant=\"body2\">\n            <strong>Enhanced Live BPM Detection with Prominent Real-Time Graph:</strong>\n          </Typography>\n          <Typography variant=\"caption\" component=\"div\" sx={{ mt: 1 }}>\n            1. Click \"Start Listening\" and allow microphone access<br/>\n            2. Start playing with consistent beats (drums, claps, or metronome)<br/>\n            3. Watch audio level respond - green is optimal<br/>\n            4. BPM appears after 4+ consistent beats with confidence bar<br/>\n            5. <strong>Large real-time graph at the top</strong> shows BPM changes over the last 60 seconds<br/>\n            6. Color-coded dots show detection confidence (green/yellow/red)\n          </Typography>\n          <Typography variant=\"body2\" sx={{ mt: 1 }}>\n            <strong>Graph Features (Main View):</strong>\n          </Typography>\n          <Typography variant=\"caption\" component=\"div\">\n            • <strong>Prominent Display:</strong> Large 900x300px graph as the primary interface<br/>\n            • <strong>Live Updates:</strong> Updates every second with new BPM data<br/>\n            • <strong>Confidence Visualization:</strong> Dot colors indicate detection quality<br/>\n            • <strong>Current BPM Line:</strong> Dashed line shows current detected BPM<br/>\n            • <strong>Comprehensive Stats:</strong> Shows average, range, stability, and data points<br/>\n            • <strong>Confidence Area:</strong> Light blue area shows overall confidence level<br/>\n            • <strong>Toggle Control:</strong> Use \"Show BPM graph\" switch to hide/show the main graph\n          </Typography>\n        </Alert>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n});\n\nexport default LiveBPMDetector;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4,\n  _t5,\n  _t6;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      value,\n      valueBuffer,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;"],"names":["createSvgIcon","_jsx","d","React","theme","useTheme","setBpm","useMetronomeStore","audioContextRef","useRef","analyserRef","mediaStreamRef","audioDataRef","animationFrameRef","processingIntervalRef","lastBeatTimeRef","beatIntervalsRef","energyHistoryRef","spectralFluxHistoryRef","previousMagnitudesRef","bpmHistoryRef","adaptiveThresholdRef","isListening","setIsListening","useState","detectedBPM","setDetectedBPM","confidence","setConfidence","audioLevel","setAudioLevel","autoSync","setAutoSync","error","setError","recentBeats","setRecentBeats","debugInfo","setDebugInfo","bpmHistory","setBpmHistory","showGraph","setShowGraph","useEffect","interval","setInterval","now","Date","prev","updated","timestamp","bpm","cutoffTime","MAX_GRAPH_POINTS","filter","entry","clearInterval","detectBeats","useCallback","audioData","frequencyData","currentTime","length","rmsEnergy","Math","sqrt","reduce","sum","sample","peakAmplitude","max","map","abs","percussiveStart","floor","percussiveEnd","percussiveBands","slice","spectralEnergy","magnitude","spectralFlux","current","prevPercussive","i","diff","combinedEnergy","push","shift","concat","recentEnergy","avgEnergy","e","energyVariance","pow","energyStdDev","baseThreshold","energyThreshold","fluxThreshold","f","peakCondition","toFixed","beats","calculateBPM","beatTimes","forEach","beatTime","intervals","medianInterval","sort","a","b","allowedDeviation","filteredIntervals","deviationFromMedian","weightedSum","totalWeight","index","weight","weightedAvgInterval","currentBpm","recentBpms","smoothedBpm","intervalVariance","bpmVariance","intervalStdDev","bpmStdDev","round","processAudio","analyser","timeDataArray","getFloatTimeDomainData","freqDataArray","Float32Array","frequencyBinCount","getFloatFrequencyData","linearFreqData","db","rms","peak","audioLevelValue","min","bpmResult","stopListening","cancelAnimationFrame","getTracks","track","stop","close","BPMStreamGraph","_jsxs","Paper","elevation","sx","p","backgroundColor","palette","background","default","mb","children","Box","display","alignItems","justifyContent","Typography","variant","color","gap","BarChart","height","border","divider","borderRadius","action","hover","textAlign","graphHeight","padding","innerWidth","graphWidth","innerHeight","bpmValues","minBpm","maxBpm","bpmRange","earliestTime","scaleX","scaleY","pathData","x","y","join","confidencePathData","baseY","confY","lastEntry","lastX","closedConfidenceArea","Chip","label","size","fontWeight","width","style","paper","boxShadow","shadows","id","patternUnits","fill","stroke","strokeWidth","opacity","primary","main","fillOpacity","strokeLinecap","strokeLinejoin","cx","cy","r","success","warning","textAnchor","fontSize","text","secondary","_Fragment","x1","y1","x2","y2","strokeDasharray","transform","Card","mt","CardContent","gutterBottom","Timeline","Alert","severity","maxWidth","mx","LinearProgress","value","grey","Stack","direction","spacing","flexWrap","Button","startIcon","MicOff","Mic","onClick","async","navigator","mediaDevices","getUserMedia","Error","stream","audio","echoCancellation","noiseSuppression","autoGainControl","sampleRate","channelCount","audioContext","window","AudioContext","webkitAudioContext","state","resume","createAnalyser","fftSize","smoothingTimeConstant","minDecibels","maxDecibels","createMediaStreamSource","connect","err","console","errorMessage","name","message","Tooltip","title","IconButton","resetDetection","Refresh","testBeat","PlayArrow","syncBPM","disabled","FormControlLabel","control","Switch","checked","onChange","target","beat","animation","toLocaleTimeString","component","getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_excluded","_t","_t2","_t3","_t4","_t5","_t6","indeterminate1Keyframe","keyframes","_taggedTemplateLiteral","indeterminate2Keyframe","bufferKeyframe","getColorShade","vars","mode","lighten","darken","LinearProgressRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","_ref","_extends","position","overflow","zIndex","colorAdjust","content","left","top","right","bottom","LinearProgressDashed","dashed","_ref2","marginTop","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","_ref3","transition","transformOrigin","_ref4","LinearProgressBar2","bar2Indeterminate","bar2Buffer","_ref5","_ref6","inProps","ref","useDefaultProps","className","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","isRtl","useRtl","rootProps","inlineStyles","undefined","process","clsx","role"],"sourceRoot":""}